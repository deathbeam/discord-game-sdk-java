package io.github.deathbeam.discordgamesdk.jna;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.ptr.PointerByReference;
import io.github.deathbeam.discordgamesdk.jna.IDiscordCore.ByReference;
/**
 * JNA Wrapper for library <b>discord_game_sdk</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface DiscordGameSDK extends Library {
	public static final String JNA_LIBRARY_NAME = "discord_game_sdk";
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(DiscordGameSDK.JNA_LIBRARY_NAME);
	public static final DiscordGameSDK INSTANCE = (DiscordGameSDK)Native.loadLibrary(DiscordGameSDK.JNA_LIBRARY_NAME, DiscordGameSDK.class);
	/** enum values */
	public static interface EDiscordResult {
		public static final int DiscordResult_Ok = 0;
		public static final int DiscordResult_ServiceUnavailable = 1;
		public static final int DiscordResult_InvalidVersion = 2;
		public static final int DiscordResult_LockFailed = 3;
		public static final int DiscordResult_InternalError = 4;
		public static final int DiscordResult_InvalidPayload = 5;
		public static final int DiscordResult_InvalidCommand = 6;
		public static final int DiscordResult_InvalidPermissions = 7;
		public static final int DiscordResult_NotFetched = 8;
		public static final int DiscordResult_NotFound = 9;
		public static final int DiscordResult_Conflict = 10;
		public static final int DiscordResult_InvalidSecret = 11;
		public static final int DiscordResult_InvalidJoinSecret = 12;
		public static final int DiscordResult_NoEligibleActivity = 13;
		public static final int DiscordResult_InvalidInvite = 14;
		public static final int DiscordResult_NotAuthenticated = 15;
		public static final int DiscordResult_InvalidAccessToken = 16;
		public static final int DiscordResult_ApplicationMismatch = 17;
		public static final int DiscordResult_InvalidDataUrl = 18;
		public static final int DiscordResult_InvalidBase64 = 19;
		public static final int DiscordResult_NotFiltered = 20;
		public static final int DiscordResult_LobbyFull = 21;
		public static final int DiscordResult_InvalidLobbySecret = 22;
		public static final int DiscordResult_InvalidFilename = 23;
		public static final int DiscordResult_InvalidFileSize = 24;
		public static final int DiscordResult_InvalidEntitlement = 25;
		public static final int DiscordResult_NotInstalled = 26;
		public static final int DiscordResult_NotRunning = 27;
		public static final int DiscordResult_InsufficientBuffer = 28;
		public static final int DiscordResult_PurchaseCanceled = 29;
		public static final int DiscordResult_InvalidGuild = 30;
		public static final int DiscordResult_InvalidEvent = 31;
		public static final int DiscordResult_InvalidChannel = 32;
		public static final int DiscordResult_InvalidOrigin = 33;
		public static final int DiscordResult_RateLimited = 34;
		public static final int DiscordResult_OAuth2Error = 35;
		public static final int DiscordResult_SelectChannelTimeout = 36;
		public static final int DiscordResult_GetGuildTimeout = 37;
		public static final int DiscordResult_SelectVoiceForceRequired = 38;
		public static final int DiscordResult_CaptureShortcutAlreadyListening = 39;
		public static final int DiscordResult_UnauthorizedForAchievement = 40;
		public static final int DiscordResult_InvalidGiftCode = 41;
		public static final int DiscordResult_PurchaseError = 42;
		public static final int DiscordResult_TransactionAborted = 43;
	};
	/** enum values */
	public static interface EDiscordCreateFlags {
		public static final int DiscordCreateFlags_Default = 0;
		public static final int DiscordCreateFlags_NoRequireDiscord = 1;
	};
	/** enum values */
	public static interface EDiscordLogLevel {
		public static final int DiscordLogLevel_Error = 1;
		public static final int DiscordLogLevel_Warn = 2;
		public static final int DiscordLogLevel_Info = 3;
		public static final int DiscordLogLevel_Debug = 4;
	};
	/** enum values */
	public static interface EDiscordUserFlag {
		public static final int DiscordUserFlag_Partner = 2;
		public static final int DiscordUserFlag_HypeSquadEvents = 4;
		public static final int DiscordUserFlag_HypeSquadHouse1 = 64;
		public static final int DiscordUserFlag_HypeSquadHouse2 = 128;
		public static final int DiscordUserFlag_HypeSquadHouse3 = 256;
	};
	/** enum values */
	public static interface EDiscordPremiumType {
		public static final int DiscordPremiumType_None = 0;
		public static final int DiscordPremiumType_Tier1 = 1;
		public static final int DiscordPremiumType_Tier2 = 2;
	};
	/** enum values */
	public static interface EDiscordImageType {
		public static final int DiscordImageType_User = 0;
	};
	/** enum values */
	public static interface EDiscordActivityType {
		public static final int DiscordActivityType_Playing = 0;
		public static final int DiscordActivityType_Streaming = 1;
		public static final int DiscordActivityType_Listening = 2;
		public static final int DiscordActivityType_Watching = 3;
	};
	/** enum values */
	public static interface EDiscordActivityActionType {
		public static final int DiscordActivityActionType_Join = 1;
		public static final int DiscordActivityActionType_Spectate = 2;
	};
	/** enum values */
	public static interface EDiscordActivityJoinRequestReply {
		public static final int DiscordActivityJoinRequestReply_No = 0;
		public static final int DiscordActivityJoinRequestReply_Yes = 1;
		public static final int DiscordActivityJoinRequestReply_Ignore = 2;
	};
	/** enum values */
	public static interface EDiscordStatus {
		public static final int DiscordStatus_Offline = 0;
		public static final int DiscordStatus_Online = 1;
		public static final int DiscordStatus_Idle = 2;
		public static final int DiscordStatus_DoNotDisturb = 3;
	};
	/** enum values */
	public static interface EDiscordRelationshipType {
		public static final int DiscordRelationshipType_None = 0;
		public static final int DiscordRelationshipType_Friend = 1;
		public static final int DiscordRelationshipType_Blocked = 2;
		public static final int DiscordRelationshipType_PendingIncoming = 3;
		public static final int DiscordRelationshipType_PendingOutgoing = 4;
		public static final int DiscordRelationshipType_Implicit = 5;
	};
	/** enum values */
	public static interface EDiscordLobbyType {
		public static final int DiscordLobbyType_Private = 1;
		public static final int DiscordLobbyType_Public = 2;
	};
	/** enum values */
	public static interface EDiscordLobbySearchComparison {
		public static final int DiscordLobbySearchComparison_LessThanOrEqual = -2;
		public static final int DiscordLobbySearchComparison_LessThan = -1;
		public static final int DiscordLobbySearchComparison_Equal = 0;
		public static final int DiscordLobbySearchComparison_GreaterThan = 1;
		public static final int DiscordLobbySearchComparison_GreaterThanOrEqual = 2;
		public static final int DiscordLobbySearchComparison_NotEqual = 3;
	};
	/** enum values */
	public static interface EDiscordLobbySearchCast {
		public static final int DiscordLobbySearchCast_String = 1;
		public static final int DiscordLobbySearchCast_Number = 2;
	};
	/** enum values */
	public static interface EDiscordLobbySearchDistance {
		public static final int DiscordLobbySearchDistance_Local = 0;
		public static final int DiscordLobbySearchDistance_Default = 1;
		public static final int DiscordLobbySearchDistance_Extended = 2;
		public static final int DiscordLobbySearchDistance_Global = 3;
	};
	/** enum values */
	public static interface EDiscordEntitlementType {
		public static final int DiscordEntitlementType_Purchase = 1;
		public static final int DiscordEntitlementType_PremiumSubscription = 2;
		public static final int DiscordEntitlementType_DeveloperGift = 3;
		public static final int DiscordEntitlementType_TestModePurchase = 4;
		public static final int DiscordEntitlementType_FreePurchase = 5;
		public static final int DiscordEntitlementType_UserGift = 6;
		public static final int DiscordEntitlementType_PremiumPurchase = 7;
	};
	/** enum values */
	public static interface EDiscordSkuType {
		public static final int DiscordSkuType_Application = 1;
		public static final int DiscordSkuType_DLC = 2;
		public static final int DiscordSkuType_Consumable = 3;
		public static final int DiscordSkuType_Bundle = 4;
	};
	/** enum values */
	public static interface EDiscordInputModeType {
		public static final int DiscordInputModeType_VoiceActivity = 0;
		public static final int DiscordInputModeType_PushToTalk = 1;
	};
	public static final int DISCORD_VERSION = (int)2;
	public static final int DISCORD_APPLICATION_MANAGER_VERSION = (int)1;
	public static final int DISCORD_USER_MANAGER_VERSION = (int)1;
	public static final int DISCORD_IMAGE_MANAGER_VERSION = (int)1;
	public static final int DISCORD_ACTIVITY_MANAGER_VERSION = (int)1;
	public static final int DISCORD_RELATIONSHIP_MANAGER_VERSION = (int)1;
	public static final int DISCORD_LOBBY_MANAGER_VERSION = (int)1;
	public static final int DISCORD_NETWORK_MANAGER_VERSION = (int)1;
	public static final int DISCORD_OVERLAY_MANAGER_VERSION = (int)1;
	public static final int DISCORD_STORAGE_MANAGER_VERSION = (int)1;
	public static final int DISCORD_STORE_MANAGER_VERSION = (int)1;
	public static final int DISCORD_VOICE_MANAGER_VERSION = (int)1;
	public static final int DISCORD_ACHIEVEMENT_MANAGER_VERSION = (int)1;
	/**
	 * Original signature : <code>EDiscordResult DiscordCreate(DiscordVersion, DiscordCreateParams*, IDiscordCore**)</code><br>
	 * @deprecated use the safer method {@link #DiscordCreate(int, io.github.deathbeam.discordgamesdk.jna.DiscordCreateParams, io.github.deathbeam.discordgamesdk.jna.IDiscordCore.ByReference[])} instead
	 */
	@Deprecated 
	int DiscordCreate(int version, DiscordCreateParams params, PointerByReference result);
	/** Original signature : <code>EDiscordResult DiscordCreate(DiscordVersion, DiscordCreateParams*, IDiscordCore**)</code> */
	int DiscordCreate(int version, DiscordCreateParams params, ByReference result[]);
}
