package io.github.deathbeam.discordgamesdk.jna;
import com.sun.jna.Callback;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.ptr.IntByReference;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class IDiscordRelationshipManager extends Structure {
	/** C type : filter_callback* */
	public IDiscordRelationshipManager.filter_callback filter;
	/** C type : count_callback* */
	public io.github.deathbeam.discordgamesdk.jna.IDiscordStorageManager.count_callback count;
	/** C type : get_callback* */
	public IDiscordRelationshipManager.get_callback get;
	/** C type : get_at_callback* */
	public IDiscordRelationshipManager.get_at_callback get_at;
	public interface filter_callback_filter_callback extends Callback {
		byte apply(Pointer filter_data, DiscordRelationship relationship);
	};
	public interface filter_callback extends Callback {
		void apply(IDiscordRelationshipManager manager, Pointer filter_data, IDiscordRelationshipManager.filter_callback_filter_callback filter);
	};
	public interface count_callback extends Callback {
		int apply(IDiscordRelationshipManager manager, IntByReference count);
	};
	public interface get_callback extends Callback {
		int apply(IDiscordRelationshipManager manager, long user_id, DiscordRelationship relationship);
	};
	public interface get_at_callback extends Callback {
		int apply(IDiscordRelationshipManager manager, int index, DiscordRelationship relationship);
	};
	public IDiscordRelationshipManager() {
		super();
	}
	protected List<String > getFieldOrder() {
		return Arrays.asList("filter", "count", "get", "get_at");
	}
	/**
	 * @param filter C type : filter_callback*<br>
	 * @param count C type : count_callback*<br>
	 * @param get C type : get_callback*<br>
	 * @param get_at C type : get_at_callback*
	 */
	public IDiscordRelationshipManager(IDiscordRelationshipManager.filter_callback filter, io.github.deathbeam.discordgamesdk.jna.IDiscordStorageManager.count_callback count, IDiscordRelationshipManager.get_callback get, IDiscordRelationshipManager.get_at_callback get_at) {
		super();
		this.filter = filter;
		this.count = count;
		this.get = get;
		this.get_at = get_at;
	}
	public IDiscordRelationshipManager(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends IDiscordRelationshipManager implements Structure.ByReference {
		
	};
	public static class ByValue extends IDiscordRelationshipManager implements Structure.ByValue {
		
	};
}
